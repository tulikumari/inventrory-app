{"version":3,"sources":["Screens/header.js","Screens/home/index.js","Screens/manageTypes/index.js","actions/typesAction.js","actions/actionTypes.js","Screens/AddTypes/index.js","component/routes/routermain.js","reducers/index.js","reducers/typesReducer.js","reducers/itemsReducer.js","reducers/typesFields.js","store/configureStore.js","component/App.js","serviceWorker.js","index.js"],"names":["Header","Fragment","class","type","data-toggle","data-target","id","href","this","props","types","map","i","key","object_type","Component","connect","state","ownProps","Index","React","name","objectTypeEdit","bind","AddTypes","e","typeVal","preventDefault","typeLength","console","log","length","lastId","object_title","fields","title","createTypes","addItems","data","fieldLength","lastFieldId","push","editTypes","target","value","splice","index","deleteTypes","className","onClick","onChange","objectTitleEdit","objectFieldEdit","objectFieldTypeEdit","AddField","listView","dispatch","typesAction","typesItem","itemdata","items","item","findIndex","val","types_id","item_id","type_id","field_id","field_value","addFields","editFields","indexType","filterField","filter","n","match","params","forEach","Routermain","exact","path","component","Home","ManageTypes","url","combineReducers","action","Object","assign","elementPos","x","indexOf","dupState","flag","element","find","o","dupState2","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","createStore","persistor","persistStore","configureStore","App","loading","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ee4ee73f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Header extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <header>\r\n        \r\n           \r\n        <nav class=\"navbar navbar-expand-md navbar-light bg-light\">\r\n        <a class=\"navbar-brand\">Objector</a>\r\n        <button type=\"button\" class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n            <div class=\"navbar-nav\">\r\n                <a href=\"/addType/all\" class=\"nav-item nav-link active\">All</a>\r\n                {this.props.types.map((type, i) => <a href={`/addType/${type.id}`} key={i} class=\"nav-item nav-link\">{(type.object_type===\"\")? \"No Title\":type.object_type}</a>)}\r\n                <a href=\"/manageTypes\" class=\"nav-item nav-link\">Manage Types</a>\r\n            </div>           \r\n        </div>\r\n    </nav>\r\n            \r\n        </header>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    types: state.types\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n\r\n","import React from 'react';\r\nimport Header from '../header';\r\n\r\nexport default class Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }; \r\n  }\r\n  render() {\r\n    return (\r\n        <Header />\r\n        \r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Header from '../header';\r\nimport { connect } from 'react-redux';\r\nimport * as typesAction from '../../actions/typesAction';\r\n\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name:[],\r\n    }; \r\n    \r\n    this.objectTypeEdit = this.objectTypeEdit.bind(this);\r\n    this.AddTypes = this.AddTypes.bind(this);\r\n  }\r\n\r\n  AddTypes(e,typeVal){\r\n    e.preventDefault();\r\n    let typeLength = 0;\r\n    console.log(typeVal.length);\r\n    if(typeVal.length > 0){\r\n      let lastId = typeVal[typeVal.length-1].id;\r\n      typeLength = ++lastId;\r\n    }\r\n    \r\n    let types = {\r\n      id: typeLength,\r\n      object_type:'',\r\n      object_title:'Title',\r\n      fields:[\r\n        {id:0,title:'Title',type:'small_text'}\r\n      ],\r\n    }\r\n    this.props.createTypes(types);\r\n\r\n    // Entry in type_item and type_field\r\n    this.props.addItems(typeLength);      \r\n  }\r\n\r\n  AddField(data,e){\r\n    e.preventDefault();\r\n    let fieldLength = data.fields.length;\r\n    let lastFieldId = data.fields[fieldLength-1].id;\r\n    lastFieldId = ++lastFieldId;\r\n\r\n    let types = {id:lastFieldId,title:'',type:'small_text'}\r\n    data.fields.push(types);\r\n    this.props.editTypes(data);\r\n  }\r\n\r\n  objectTypeEdit(e,data){\r\n    data.object_type = e.target.value;\r\n    this.props.editTypes(data);\r\n  }\r\n  objectTitleEdit(e,data){\r\n    data.object_title = e.target.value;\r\n    this.props.editTypes(data);\r\n  }\r\n  objectFieldEdit(e,data,i){\r\n    data.fields[i].title = e.target.value;\r\n    this.props.editTypes(data);\r\n  }\r\n  objectFieldTypeEdit(e,data,i){\r\n    if(e.target.value==\"remove_text\") {\r\n      //this.props.removeFields(data.id,data.fields[i].id);\r\n      data.fields.splice( i, 1 );\r\n    } else {\r\n      data.fields[i].type = e.target.value;\r\n    }\r\n    this.props.editTypes(data);\r\n  }\r\n  deleteTypes(e, index){\r\n    e.preventDefault();\r\n    this.props.deleteTypes(index);\r\n  }\r\n\r\n\r\n  listView(data, index){\r\n    return (\r\n        <div className=\"box-grid\" key={index}>\r\n          <div className=\"heading\">\r\n            {data.object_type}\r\n            <a href=\"#\" className=\"cross\" onClick={(e) => this.deleteTypes(e, data.id)}>x</a>\r\n          </div>\r\n          <div className=\"box-detail\"> \r\n             <label>Object Type:</label>\r\n             <input type=\"text\" onChange={(e) => this.objectTypeEdit(e,data)} value={data.object_type} />\r\n             <label>Object Title:</label>\r\n             <select onChange={(e) => this.objectTitleEdit(e,data)} value={data.object_title}>\r\n                {data.fields.map((value, i) => {\r\n                  return (\r\n                      <option key={i} value={value.title}>{value.title}</option>\r\n                    );\r\n                 })\r\n                }\r\n             </select>\r\n\r\n             <label>Fields:</label>\r\n             {data.fields.map((value, i) => {\r\n               return (\r\n                <div className=\"field-sec\" key={i}>\r\n                  <input type=\"text\" onChange={(e) => this.objectFieldEdit(e,data,i)} value={value.title}  />\r\n                  <select onChange={(e) => this.objectFieldTypeEdit(e,data,i)} value={value.type}>\r\n                    <option value=\"small_text\">Small Text</option>\r\n                    <option value=\"long_text\">Long Text</option>\r\n                    <option value=\"number_text\">Number Text</option>\r\n                    <option value=\"date_text\">Date</option>\r\n                    <option value=\"remove_text\">Remove</option>\r\n                  </select>\r\n                </div>\r\n                );\r\n              })\r\n             }\r\n            <div className=\"add_field\" onClick={(e) => this.AddField(data,e)}><button>Add Field</button></div>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n        <Header />\r\n        <section className=\"body-sec\">\r\n          <div className=\"flex-row\">\r\n            \r\n              {this.props.types.map((type, i) => this.listView(type, i))}\r\n            \r\n            <div class=\"col-md-3\">\r\n              <button onClick={(e) => this.AddTypes(e,this.props.types)} className=\"add_type_btn\">Add Types</button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        </React.Fragment>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    types: state.types\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createTypes: types => dispatch(typesAction.createTypes(types)),\r\n    editTypes: data => dispatch(typesAction.editTypes(data)),\r\n    deleteTypes: index =>dispatch(typesAction.deleteTypes(index)),\r\n    addItems: typesItem =>dispatch(typesAction.addItems(typesItem)),\r\n    \r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","import * as actionTypes from './actionTypes';\r\n\r\nexport const createTypes = (types) => {\r\n    return {\r\n      type: actionTypes.CREATE_NEW_TYPES,\r\n      types: types\r\n    }\r\n  };\r\nexport const editTypes = (data) => {\r\n    return {\r\n        type: actionTypes.EDIT_TYPES,\r\n        data: data\r\n    }\r\n}\r\nexport const deleteTypes = (id) => {\r\n  return {\r\n      type: actionTypes.DELETE_TYPES,\r\n      id: id\r\n  }\r\n}\r\nexport const addItems = (itemdata) => {\r\n  return {\r\n      type: actionTypes.ADDITEMS,\r\n      itemdata: itemdata\r\n  }\r\n}\r\nexport const addFields = (itemdata) => {\r\n  return {\r\n      type: actionTypes.ADD_FIELDS,\r\n      itemdata: itemdata\r\n  }\r\n}\r\nexport const editFields = (data) => {\r\n  return {\r\n      type: actionTypes.EDIT_FIELDS,\r\n      data: data\r\n  }\r\n}\r\nexport const removeFields = (data,filed_id) => {\r\n  return {\r\n      type: actionTypes.EDIT_FIELDS,\r\n      data: data,\r\n      filed_id:filed_id\r\n  }\r\n}","export const GET_ALL_TYPES = 'GET_ALL_TYPES';\r\nexport const CREATE_NEW_TYPES = 'CREATE_NEW_TYPES';\r\nexport const EDIT_TYPES = 'EDIT_TYPES';\r\nexport const DELETE_TYPES = 'DELETE_TYPES';\r\nexport const ADDITEMS = 'ADDITEMS';\r\nexport const ADD_FIELDS = 'ADD_FIELDS';\r\nexport const EDIT_FIELDS = 'EDIT_FIELDS';","import React, { Component } from 'react';\r\nimport Header from '../header';\r\nimport { connect } from 'react-redux';\r\nimport * as typesAction from '../../actions/typesAction';\r\n\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name:[],\r\n    }; \r\n    \r\n   \r\n  }\r\n\r\n  componentDidMount(){\r\n    \r\n     this.props.items.map((item, i) => {\r\n      let typeLength = 0;\r\n      let fieldLength = this.props.fields.length;\r\n      console.log(\"fieldLength>>\",fieldLength)\r\n      if(fieldLength > 0){\r\n        let lastId = this.props.fields[fieldLength-1].id;\r\n        console.log(\"lastId>>\",lastId)\r\n        typeLength = ++lastId;\r\n      }\r\n        const index = this.props.types.findIndex(val => val.id === item.types_id);\r\n        console.log(\"index\",index)\r\n        this.props.types[index].fields.map((value, i) => {\r\n          let types = {\r\n            id: typeLength,\r\n            item_id:item.id,\r\n            type_id:item.types_id,\r\n            field_id:value.id,\r\n            field_value:'',\r\n          }\r\n          this.props.addFields(types);\r\n        })\r\n      })\r\n  }\r\n\r\n  AddTypes(e,typeVal){\r\n    e.preventDefault();\r\n    let typeLength = 0;\r\n    console.log(typeVal.length);\r\n    if(typeVal.length > 0){\r\n      let lastId = typeVal[typeVal.length-1].id;\r\n      typeLength = ++lastId;\r\n    }\r\n    \r\n    let types = {\r\n      id: typeLength,\r\n      object_type:'',\r\n      object_title:'Title',\r\n      fields:[\r\n        {title:'Title',type:'small_text'}\r\n      ],\r\n    }\r\n    this.props.createTypes(types);\r\n  }\r\n\r\n  \r\n\r\n  editFields(e,index){\r\n    e.preventDefault();\r\n    //let fieldIndex = this.props.fields.findIndex(val => val.id === index);\r\n    console.log(\"fieldIndex>>>>>>>>\",index);\r\n    let data = this.props.fields;\r\n    data[index].field_value = e.target.value;\r\n    this.props.editFields(data);\r\n  }\r\n\r\n\r\n  listView(data, index){\r\n    let indexType = this.props.types.findIndex(val => val.id === data.types_id);\r\n\r\n    var filterField = this.props.fields.filter(n => n.item_id == data.id);\r\n    \r\n    return (\r\n        <div className=\"box-grid\" key={index}>\r\n          <div className=\"heading\">\r\n            \r\n            {this.props.types[indexType].object_type}\r\n            <a href=\"#\" className=\"cross\" onClick={(e) => this.deleteTypes(e, data.id)}>x</a>\r\n          </div>\r\n          <div className=\"box-detail\"> \r\n            {filterField.map((value, i) => {\r\n                return (\r\n                  <div key={i}>\r\n                    <label>{this.props.types[indexType].fields[(this.props.types[indexType].fields.findIndex(val => val.id === value.field_id))].title}</label>\r\n                    <input type=\"text\" onChange={(e) => this.editFields(e,i)} value={value.field_value} />\r\n                  </div>\r\n                  );\r\n             })\r\n            }\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n        <Header />\r\n        <section className=\"body-sec\">\r\n          <div className=\"flex-row\">\r\n          {this.props.match.params.id === 'all' ?\r\n            this.props.items.map((type, i) => this.listView(type, i))\r\n            :\r\n            this.props.types.forEach((type, i) => {\r\n              console.log(\"type.id\",type)\r\n              if(type.id===this.props.match.params.id) {\r\n                console.log(\"type.id>>>\",type)\r\n                //return this.listView(type, i);\r\n              }\r\n            })\r\n          }\r\n            \r\n            \r\n            <div class=\"col-md-3\">\r\n              {(this.props.types.length>0) ?\r\n              <button className=\"add_type_btn\">Add Item</button>\r\n              : \"\" }\r\n            </div>\r\n          </div>\r\n        </section>\r\n        </React.Fragment>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    types: state.types,\r\n    items: state.items,\r\n    fields: state.fields\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addFields: types =>dispatch(typesAction.addFields(types)),\r\n    editFields: data =>dispatch(typesAction.editFields(data)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams } from \"react-router-dom\";\r\nimport Home from \"../../Screens/home\";\r\nimport ManageTypes from \"../../Screens/manageTypes\";\r\nimport AddTypes from \"../../Screens/AddTypes\";\r\n\r\nclass Routermain extends Component {\r\n    render() {\r\n        return (\r\n            \r\n                <Router>\r\n                     <Route exact path=\"/\" component={Home} />\r\n                     <Route exact path=\"/manageTypes\" component={ManageTypes} />  \r\n                     <Route exact path=\"/addType/:id\" url=\"/addType/id\" component={AddTypes} />  \r\n                </Router>\r\n                \r\n            \r\n        )\r\n    }\r\n}\r\nexport default Routermain; ","import { combineReducers } from 'redux';\r\nimport types from './typesReducer';\r\nimport items from './itemsReducer';\r\nimport fields from './typesFields';\r\n\r\nexport default combineReducers({\r\n    types: types,\r\n    items: items,\r\n    fields: fields\r\n});","import * as actionTypes from '../actions/actionTypes.js';\r\n\r\nexport default (state = [], action) => {\r\n    switch (action.type){\r\n      \r\n      case actionTypes.CREATE_NEW_TYPES:\r\n      return [\r\n        ...state,\r\n        Object.assign({}, action.types)\r\n      ];\r\n      case actionTypes.EDIT_TYPES:\r\n        var elementPos = state.map(function(x) {return x.id; }).indexOf(action.data.id);\r\n        let dupState = [...state];\r\n        dupState[elementPos] = action.data;\r\n        console.log(\"dupState\",action.data)\r\n        return dupState;\r\n      case actionTypes.DELETE_TYPES:\r\n        return state.filter((data, i) => data.id !== action.id);\r\n      default:\r\n            return state;\r\n    }\r\n  };","import * as actionTypes from '../actions/actionTypes.js';\r\n\r\nexport default (state = [], action) => {\r\n    switch (action.type){\r\n      case actionTypes.ADDITEMS:\r\n        let flag = false;\r\n        let dupState = [];\r\n        state.forEach(function(val) {\r\n          if (val.types_id===action.itemdata) {\r\n            flag = true;\r\n          }\r\n        });\r\n        console.log(\"flag\",flag)\r\n        if(flag === true) {\r\n          dupState = [...state];\r\n        } else {\r\n          let fieldLength = state.length;\r\n          let lastFieldId = 0;\r\n          if(fieldLength > 0) {\r\n            lastFieldId = state[fieldLength-1].id;\r\n            lastFieldId = ++lastFieldId;\r\n          }\r\n          dupState = [...state,Object.assign({},  {id: lastFieldId,types_id:action.itemdata})];\r\n        }\r\n       \r\n        return dupState;\r\n      default:\r\n            return state;\r\n    }\r\n  };","import * as actionTypes from '../actions/actionTypes.js';\r\n\r\nexport default (state = [], action) => {\r\n    switch (action.type){\r\n            \r\n      case actionTypes.ADD_FIELDS:\r\n        let dupState = [...state];\r\n        let element =  action.itemdata;\r\n        console.log(\"dupState.indexOf(element)\",dupState.indexOf(element));\r\n        //if (dupState.indexOf(element) === -1) dupState.push(element);\r\n        if (!dupState.find(o => o.item_id === element.item_id && o.type_id === element.type_id && o.field_id === element.field_id))\r\n        dupState.push(element);\r\n        return dupState;   \r\n      case actionTypes.EDIT_FIELDS:\r\n        var elementPos = state.map(function(x) {return x.id; }).indexOf(action.data.id);\r\n        let dupState2 = [...state];\r\n        dupState2[elementPos] = action.data;\r\n        return dupState2;\r\n      default:\r\n            return state;\r\n    }\r\n  };","import {createStore} from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\n\r\nimport rootReducer from '../reducers';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport default () => {\r\n  let store = createStore(persistedReducer)\r\n  let persistor = persistStore(store)\r\n  return { store, persistor }\r\n}\r\n\r\n// export default function configureStore(initialState) {\r\n//   return createStore(rootReducer, initialState);\r\n// }","import React from 'react';\r\nimport Routermain from \"./routes/routermain\";\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from '../store/configureStore';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nconst { persistor, store } = configureStore()\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n       <Routermain />\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './component/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\n\r\n\r\n//<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n//import '../node_modules/bootstrap/dist/js/popper.min.js';\r\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js'\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}